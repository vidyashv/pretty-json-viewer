{
  "type": "object",
  "properties": {
    "id": {
      "type": "integer",
      "format": "int64",
      "readOnly": true,
      "description": "#/components/schemas/Id"
    },
    "pet": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "name",
            "photoUrls"
          ],
          "discriminator": {
            "propertyName": "petType",
            "mapping": {
              "cat": "#/components/schemas/Cat",
              "dog": "#/components/schemas/Dog",
              "bee": "#/components/schemas/HoneyBee"
            }
          },
          "properties": {
            "id": {
              "externalDocs": {
                "description": "Find more info here",
                "url": "https://example.com"
              },
              "description": "Pet ID",
              "allOf": [
                {
                  "type": "integer",
                  "format": "int64",
                  "readOnly": true,
                  "description": "#/components/schemas/Id"
                }
              ]
            },
            "category": {
              "description": "Categories this pet belongs to",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Category ID",
                      "allOf": [
                        {
                          "type": "integer",
                          "format": "int64",
                          "readOnly": true,
                          "description": "#/components/schemas/Id"
                        }
                      ]
                    },
                    "name": {
                      "description": "Category name",
                      "type": "string",
                      "minLength": 1
                    },
                    "sub": {
                      "description": "Test Sub Category",
                      "type": "object",
                      "properties": {
                        "prop1": {
                          "type": "string",
                          "description": "Dumb Property"
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "Category"
                  },
                  "description": "#/components/schemas/Category"
                }
              ]
            },
            "name": {
              "description": "The name given to a pet",
              "type": "string",
              "example": "Guru"
            },
            "photoUrls": {
              "description": "The list of URL to a cute photos featuring pet",
              "type": "array",
              "maxItems": 20,
              "xml": {
                "name": "photoUrl",
                "wrapped": true
              },
              "items": {
                "type": "string",
                "format": "url"
              }
            },
            "friend": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Pet"
                }
              ]
            },
            "tags": {
              "description": "Tags attached to the pet",
              "type": "array",
              "minItems": 1,
              "xml": {
                "name": "tag",
                "wrapped": true
              },
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Tag ID",
                    "allOf": [
                      {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "#/components/schemas/Id"
                      }
                    ]
                  },
                  "name": {
                    "description": "Tag name",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "xml": {
                  "name": "Tag"
                },
                "description": "#/components/schemas/Tag"
              }
            },
            "status": {
              "type": "string",
              "description": "Pet status in the store",
              "enum": [
                "available",
                "pending",
                "sold"
              ]
            },
            "petType": {
              "description": "Type of a pet",
              "type": "string"
            }
          },
          "xml": {
            "name": "Pet"
          },
          "description": "#/components/schemas/Pet"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "description": "Tag ID",
              "allOf": [
                {
                  "type": "integer",
                  "format": "int64",
                  "readOnly": true,
                  "description": "#/components/schemas/Id"
                }
              ]
            },
            "name": {
              "description": "Tag name",
              "type": "string",
              "minLength": 1
            }
          },
          "xml": {
            "name": "Tag"
          },
          "description": "#/components/schemas/Tag"
        }
      ]
    },
    "considerSafetyStock":{
      "type":"boolean",
      "default":true,
      "description":"Reservation may override and consume the withheld safety stock quantity if this is set to false ",
      "example":false
      },    
    "username": {
      "description": "User supplied username",
      "type": "string",
      "minLength": 4,
      "example": "John78"
    },
    "firstName": {
      "description": "User first name",
      "type": "string",
      "minLength": 1,
      "example": "John"
    },
    "lastName": {
      "description": "User last name",
      "type": "string",
      "minLength": 1,
      "example": "Smith"
    },
    "email": {
      "description": "User email address",
      "type": "string",
      "format": "email",
      "example": "john.smith@example.com"
    },
    "password": {
      "type": "string",
      "description": "User password, MUST contain a mix of upper and lower case letters, as well as digits",
      "format": "password",
      "minLength": 8,
      "pattern": "/(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])/",
      "example": "drowssaP123"
    },
    "phone": {
      "description": "User phone number in international format",
      "type": "string",
      "pattern": "/^\\+(?:[0-9]-?){6,14}[0-9]$/",
      "example": "+1-202-555-0192"
    },
    "userStatus": {
      "description": "User status",
      "type": "integer",
      "format": "int32"
    }
  },
  "xml": {
    "name": "User"
  }
}